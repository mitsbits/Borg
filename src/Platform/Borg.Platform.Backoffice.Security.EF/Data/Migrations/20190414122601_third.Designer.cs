// <auto-generated />
using System;
using Borg.Platform.Backoffice.Security.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Borg.Platform.Backoffice.Security.EF.Data.Migrations
{
    [DbContext(typeof(SecurityDbContext))]
    [Migration("20190414122601_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.CmsRole_Id", "'CmsRole_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsRolePermission_Id", "'CmsRolePermission_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsUser_Id", "'CmsUser_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsUserPermission_Id", "'CmsUserPermission_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.CmsRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsRole_Id");

                    b.Property<string>("Title");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("CmsRole","security");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.CmsRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsRolePermission_Id");

                    b.Property<int>("Depth");

                    b.Property<int>("ParentId");

                    b.Property<int>("PermissionOperation");

                    b.Property<string>("Resource");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("RoleId");

                    b.ToTable("CmsRolePermission","security");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.CmsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsUser_Id");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("SurName");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("CmsUser","security");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.CmsUserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsUserPermission_Id");

                    b.Property<int>("Depth");

                    b.Property<int>("ParentId");

                    b.Property<int>("PermissionOperation");

                    b.Property<string>("Resource");

                    b.Property<int?>("UserId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("UserId");

                    b.ToTable("CmsUserPermission","security");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.UserRole", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.Property<int?>("CmsRoleId");

                    b.Property<int?>("CmsUserId");

                    b.HasKey("RoleId", "UserId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("CmsRoleId");

                    b.HasIndex("CmsUserId");

                    b.ToTable("UserRole","security");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.CmsRolePermission", b =>
                {
                    b.HasOne("Borg.Platform.Backoffice.Security.EF.CmsRole", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.CmsUserPermission", b =>
                {
                    b.HasOne("Borg.Platform.Backoffice.Security.EF.CmsUser", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Borg.Platform.Backoffice.Security.EF.UserRole", b =>
                {
                    b.HasOne("Borg.Platform.Backoffice.Security.EF.CmsRole")
                        .WithMany("Users")
                        .HasForeignKey("CmsRoleId");

                    b.HasOne("Borg.Platform.Backoffice.Security.EF.CmsUser")
                        .WithMany("Roles")
                        .HasForeignKey("CmsUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
