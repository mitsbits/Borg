// <auto-generated />
using System;
using Borg.Platform.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Borg.Platform.EF.Data.Migrations
{
    [DbContext(typeof(BorgDb))]
    [Migration("20190625184852_mig")]
    partial class mig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.CmsLanguage_Id", "'CmsLanguage_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsMenu_Id", "'CmsMenu_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsMenuItem_Id", "'CmsMenuItem_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsPage_Id", "'CmsPage_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsRole_Id", "'CmsRole_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsRolePermission_Id", "'CmsRolePermission_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsUser_Id", "'CmsUser_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.CmsUserPermission_Id", "'CmsUserPermission_Id', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsLanguage_Id");

                    b.Property<string>("Title");

                    b.Property<string>("TwoLetterISO");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("TwoLetterISO")
                        .IsUnique()
                        .HasName("IndexName")
                        .HasFilter("[TwoLetterISO] IS NOT NULL");

                    b.ToTable("CmsLanguage");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsMenu_Id");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Title");

                    b.Property<string>("TwoLetterISO");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("LanguageId");

                    b.ToTable("CmsMenu");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsMenuItem_Id");

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int?>("LanguageId");

                    b.Property<int>("MenuId");

                    b.Property<int>("ParentId");

                    b.Property<string>("Title");

                    b.Property<string>("TwoLetterISO");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("LanguageId");

                    b.HasIndex("MenuId");

                    b.ToTable("CmsMenuItem");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsPage_Id");

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int?>("LanguageId");

                    b.Property<int>("ParentId");

                    b.Property<string>("Title");

                    b.Property<string>("TwoLetterISO");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("LanguageId");

                    b.ToTable("CmsPage");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsRole_Id");

                    b.Property<bool>("IsSystem");

                    b.Property<string>("Title");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("CmsRole");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsRolePermission_Id");

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int>("ParentId");

                    b.Property<int>("PermissionOperation");

                    b.Property<string>("Resource");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("RoleId");

                    b.ToTable("CmsRolePermission");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsUser_Id");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Surname");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("CmsUser");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsUserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEXT VALUE FOR CmsUserPermission_Id");

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int>("ParentId");

                    b.Property<int>("PermissionOperation");

                    b.Property<string>("Resource");

                    b.Property<int?>("UserId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("UserId");

                    b.ToTable("CmsUserPermission");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.UserRole", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("RoleId", "UserId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("UserId");

                    b.ToTable("CmsUserCmsRole");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenu", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenuItem", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsPage", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsRolePermission", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsRole", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsUserPermission", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsUser", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.UserRole", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsUser", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
