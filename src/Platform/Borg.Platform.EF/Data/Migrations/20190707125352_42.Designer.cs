// <auto-generated />
using System;
using Borg.Platform.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Borg.Platform.EF.Data.Migrations
{
    [DbContext(typeof(BorgDb))]
    [Migration("20190707125352_42")]
    partial class _42
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CultureName");

                    b.Property<string>("Title");

                    b.Property<string>("TwoLetterISO");

                    b.HasKey("Id");

                    b.HasIndex("TwoLetterISO")
                        .HasName("IX_TwoLetterISO");

                    b.ToTable("CmsLanguage","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenu", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("LanguageID");

                    b.Property<string>("Title");

                    b.HasKey("Id", "LanguageID")
                        .HasName("PK_CmsMenu_Id_LanguageID")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("LanguageID");

                    b.ToTable("CmsMenu","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int>("LanguageID");

                    b.Property<int>("MenuId");

                    b.Property<int?>("MenuId1");

                    b.Property<int?>("MenuLanguageID");

                    b.Property<int>("ParentId");

                    b.Property<string>("Title");

                    b.HasKey("Id")
                        .HasName("PK_CmsMenuItem_Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("LanguageID");

                    b.HasIndex("MenuId1", "MenuLanguageID");

                    b.ToTable("CmsMenuItem","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int>("LanguageID");

                    b.Property<int>("ParentId");

                    b.Property<string>("Title");

                    b.HasKey("Id")
                        .HasName("PK_CmsPage_Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("LanguageID");

                    b.ToTable("CmsPage","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSystem");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("CmsRole","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int>("ParentId");

                    b.Property<int>("PermissionOperation");

                    b.Property<string>("Resource");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("CmsRolePermission","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("CmsUser","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsUserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth");

                    b.Property<string>("Hierarchy");

                    b.Property<int>("ParentId");

                    b.Property<int>("PermissionOperation");

                    b.Property<string>("Resource");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CmsUserPermission","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK_UserRole_UserId_RoleId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("RoleId");

                    b.ToTable("CmsUserCmsRole","borgdb");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenu", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsMenuItem", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId1", "MenuLanguageID");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Domain.CmsPage", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Domain.CmsLanguage", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsRolePermission", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsRole", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.CmsUserPermission", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsUser", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.Security.UserRole", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Borg.Platform.EF.CMS.Security.CmsUser", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
